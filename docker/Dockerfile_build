# 使用官方 Ubuntu 镜像作为基础镜像
FROM hackers365/xiaozhi_golang_build:0.1 AS builder

WORKDIR /app
COPY . .
RUN go build -o /app/xiaozhi_server /app/cmd/server/  # 编译生成二进制文件

FROM ubuntu:22.04

# 设置非交互式安装环境变量
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends libopus0 libopusfile-dev && rm -rf /var/lib/apt/lists/*

COPY docker/lib/onnxruntime-linux-x64-1.21.0.tgz /tmp/
RUN cd /tmp && \
    tar -xzf onnxruntime-linux-x64-1.21.0.tgz && \
    mkdir -p /usr/local/include/onnxruntime && \
    cp -r onnxruntime-linux-x64-1.21.0/include/* /usr/local/include/onnxruntime/ && \
    cp -r onnxruntime-linux-x64-1.21.0/lib/* /usr/local/lib/ && \
    rm -rf onnxruntime-linux-x64-1.21.0* && \
    ldconfig
ENV ONNXRUNTIME_DIR=/usr/local
ENV CGO_CFLAGS="-I${ONNXRUNTIME_DIR}/include/onnxruntime" 
ENV CGO_LDFLAGS="-L${ONNXRUNTIME_DIR}/lib -lonnxruntime"

# 设置工作目录
WORKDIR /workspace

# 仅从构建阶段复制编译后的二进制文件（不携带源码和编译依赖）
COPY --from=builder /app/xiaozhi_server /workspace/bin/xiaozhi_server

RUN mkdir -p /workspace/logs /workspace/config 

# 暴露端口, http/websocket:8989, udp:8990  mqtt: 1883,2883,8883, 
EXPOSE 8989 8990 1883 2883 8883

# 启动命令
CMD ["bin/xiaozhi_server", "-c", "config/config.json"]
